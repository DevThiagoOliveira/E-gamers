{"version":3,"file":"register.bundle.js","mappings":"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;;;;;;;ACxGL;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,4EAA4E;AAC5E,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C,iDAAiD;;AAE5F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,MAAM;AACN,eAAe;AACf;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;;AAEA;AACA;AACA;AACA,sCAAsC,uDAAuD;AAC7F;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;;AAEA;AACA;AACA,wCAAwC,WAAW;AACnD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC,gBAAgB;AACtD;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,4BAA4B;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,UAAU;AACV;AACA;AACA;AACA;;AAEA;;AAEA,UAAU;AACV;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,cAAc;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,mBAAmB;AACpD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA,kBAAkB;;AAElB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB,gBAAgB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,+CAA+C,QAAQ;AACvD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA,YAAY;AACZ;AACA;AACA;;AAEA,YAAY;AACZ;AACA;AACA;;AAEA,YAAY;AACZ;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,CAAC;AACD;AACA;AACA;AACA;AACA,EAAE,KAA0B,oBAAoB,CAAE;AAClD;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;UCxvBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;ACNqC;AACD;AAC2C;;AAE/E;AACA,IAAMiD,UAAU,GAAG/C,QAAQ,CAACC,aAAa,CAAC,eAAe,CAAC;AAC1D,IAAM+C,SAAS,GAAGhD,QAAQ,CAACC,aAAa,CAAC,YAAY,CAAC;AAEtD,IAAIgD,MAAM,GAAG;EACTC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAE,SAAS;EACpBC,KAAK,EAAE;AACX,CAAC;;AAED;AACA,IAAMC,cAAc,GAAG,IAAIvD,uFAAiB,CAACiD,UAAU,CAAC;AACxDO,OAAO,CAACC,GAAG,CAACR,UAAU,CAAC;;AAEvB;AACAA,UAAU,CAAC3C,gBAAgB,CAAC,QAAQ,EAAE,UAACoD,OAAO,EAAK;EAC/CA,OAAO,CAACjD,cAAc,EAAE;EAExB,IAAMkD,QAAQ,GAAG,IAAIC,QAAQ,CAACvD,KAAI,CAAC,CAAC,CAAC;EACrC,IAAMwD,YAAY,GAAG,IAAIC,eAAe,EAAE;EAAC,IAAAhD,SAAA,GAAAC,0BAAA,CAIvB8C,YAAY;IAAA5C,KAAA;EAAA;IAAhC,KAAAH,SAAA,CAAAI,CAAA,MAAAD,KAAA,GAAAH,SAAA,CAAAK,CAAA,IAAAC,IAAA,GAAkC;MAAA,IAAvB2C,KAAK,GAAA9C,KAAA,CAAA5C,KAAA;MACZwF,YAAY,CAACG,MAAM,CAACD,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC;MACvCP,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC;IACnC;;IAGA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,SAAAxC,GAAA;IAAAT,SAAA,CAAAU,CAAA,CAAAD,GAAA;EAAA;IAAAT,SAAA,CAAAW,CAAA;EAAA;AACJ,CAAC,CAAC,C","sources":["webpack://javascript/./src/modules/loginRegister/cpfValidatorClasse.js","webpack://javascript/./src/modules/loginRegister/validarFormulario.js","webpack://javascript/./src/assets/css/register.css","webpack://javascript/./node_modules/regenerator-runtime/runtime.js","webpack://javascript/webpack/bootstrap","webpack://javascript/webpack/runtime/compat get default export","webpack://javascript/webpack/runtime/define property getters","webpack://javascript/webpack/runtime/hasOwnProperty shorthand","webpack://javascript/webpack/runtime/make namespace object","webpack://javascript/./src/js/register.js"],"sourcesContent":["export class CPF {\r\n    constructor(cpf) {\r\n        Object.defineProperty(this, 'cpfOnly', {\r\n            enumerable: true,\r\n            configurable: false,\r\n            writable: true,\r\n            value: cpf.replace(/\\D+/g, ''),\r\n        });\r\n    }\r\n    \r\n    validator() {\r\n        if(typeof this.cpfOnly !== 'string') return;\r\n        if(this.cpfOnly.length !== 11) return;\r\n        if(CPF.isSequence(this.cpfOnly)) return;\r\n\r\n        const cfpParcial = this.cpfOnly.slice(0, -2);\r\n    \r\n        const digit01 = CPF.checkDigit(cfpParcial);\r\n        const digit02 = CPF.checkDigit(cfpParcial + digit01);\r\n\r\n        const cpfInteiro = cfpParcial + digit01 + digit02;\r\n\r\n        return cpfInteiro === this.cpfOnly;\r\n    }\r\n\r\n    static checkDigit(cpfParcial) {\r\n        const cpfArray = Array.from(cpfParcial);\r\n        let count = cpfArray.length + 1;\r\n        \r\n        const soma = cpfArray.reduce((acumulator, value) => {\r\n            acumulator += ( Number(value) * count );\r\n            \r\n            count--;\r\n            return acumulator\r\n        }, 0);\r\n        \r\n        const primeiroDigito = 11 - (soma % 11);\r\n        return primeiroDigito > 9 ? 0 : String(primeiroDigito); \r\n    }\r\n\r\n    static isSequence(cpf) {\r\n        return cpf.charAt(0).repeat(cpf.length) === cpf;\r\n    }\r\n\r\n}","import { CPF } from \"./cpfValidatorClasse\";\r\n\r\nexport class ValidarFormulario {\r\n    constructor() {\r\n        this.form = document.querySelector('#formRegister');\r\n        this.events();\r\n    }\r\n\r\n    events() {\r\n        this.form.addEventListener('submit', submitButton => { // usar um arrow function por que ela não permite a alteração do this da classe principal\r\n            this.handleSubmit(submitButton);\r\n        });\r\n    }\r\n\r\n    handleSubmit(submitButton) {\r\n        submitButton.preventDefault();\r\n        const formValido = this.camposValidos();\r\n        const senhasValidas = this.senhasValidas();\r\n\r\n        if(formValido && senhasValidas) {\r\n            // this.form.submit();\r\n        }\r\n    }\r\n\r\n    camposValidos() {\r\n        let valid = true; // usar uma flag para falar se o campo vai ser valido ou não, assumo como true se der erro coloco ele como false\r\n        \r\n        for (const errorText of this.form.querySelectorAll('.text-error')) {\r\n            errorText.remove();\r\n        }\r\n\r\n        for (const input of this.form.querySelectorAll('.validate')) {\r\n\r\n            const label = input.previousElementSibling.innerText;\r\n\r\n            if(!input.value) {\r\n                this.criaErro(input, `Campo \"${label}\" não pode estar em branco`);\r\n                valid = false;\r\n            }\r\n\r\n            if(input.classList.contains('cpf')) {\r\n                if(!this.validaCPF(input)) valid = false;\r\n            } \r\n            \r\n            if(input.classList.contains('user')) {\r\n                if(!this.validaUsuario(input)) valid = false;\r\n            }\r\n        }\r\n\r\n        return valid;\r\n    }\r\n\r\n    senhasValidas() {\r\n        let valid = true;\r\n\r\n        const senha = this.form.querySelector('.password');\r\n        const repetirSenha = this.form.querySelector('.repet-password');\r\n\r\n        if(senha.value.length < 6 || senha.value.length > 12) {\r\n            this.criaErro(senha, 'A senha deverá ter entre 6 a 12 caracteres');\r\n            valid = false;\r\n        }\r\n\r\n        if(senha.value !== repetirSenha.value) {\r\n            this.criaErro(senha, 'As senhas precisam ser iguais');\r\n            this.criaErro(repetirSenha, 'As senhas precisam ser iguais');\r\n            valid = false;\r\n        }\r\n\r\n        return valid;\r\n    }\r\n\r\n    validaCPF(inputCPF) {\r\n        const cpf = new CPF(inputCPF.value);\r\n        \r\n        if(!cpf.validator()) {\r\n            this.criaErro(inputCPF, 'CPF Inválido')\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    validaUsuario(inputUsuario) {\r\n        const usuario = inputUsuario.value;\r\n\r\n        if(usuario.length > 12 || usuario.length < 3) {\r\n            this.criaErro(inputUsuario, 'O usuário deverá ter entre 3 a 12 caracteres');\r\n            return false\r\n        };\r\n\r\n        if(!usuario.match(/^[a-zA-Z0-9]+$/g)) { // /^[a-zA-Z0-9]$/g) faz com que ele pegue tudo que eu informo dentro do [] o + ele faz repetidas vezes invez de 1\r\n            this.criaErro(inputUsuario, 'Nome do usuário deverá conter somente letras e/ou números ');\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    criaErro(input, mensagem) {\r\n        const div = document.createElement('div');\r\n        div.innerText = mensagem;\r\n        div.classList.add('text-error');\r\n        input.insertAdjacentElement('afterend', div);\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nexport {};","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; };\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) });\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: true });\n  defineProperty(\n    GeneratorFunctionPrototype,\n    \"constructor\",\n    { value: GeneratorFunction, configurable: true }\n  );\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    defineProperty(this, \"_invoke\", { value: enqueue });\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method;\n    var method = delegate.iterator[methodName];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method, or a missing .next mehtod, always terminate the\n      // yield* loop.\n      context.delegate = null;\n\n      // Note: [\"return\"] must be used for ES3 parsing compatibility.\n      if (methodName === \"throw\" && delegate.iterator[\"return\"]) {\n        // If the delegate iterator has a return method, give it a\n        // chance to clean up.\n        context.method = \"return\";\n        context.arg = undefined;\n        maybeInvokeDelegate(delegate, context);\n\n        if (context.method === \"throw\") {\n          // If maybeInvokeDelegate(context) changed context.method from\n          // \"return\" to \"throw\", let that override the TypeError below.\n          return ContinueSentinel;\n        }\n      }\n      if (methodName !== \"return\") {\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a '\" + methodName + \"' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(val) {\n    var object = Object(val);\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import 'regenerator-runtime/runtime';\r\nimport '../assets/css/register.css';\r\nimport { ValidarFormulario } from '../modules/loginRegister/validarFormulario';\r\n\r\n// html tags\r\nconst formulario = document.querySelector('#formRegister');\r\nconst important = document.querySelector('.important');\r\n\r\nlet object = {\r\n    nome: 'Thiago',\r\n    sobrenome: 'Augusto',\r\n    idade: '22'\r\n}\r\n\r\n// validação\r\nconst formValidation = new ValidarFormulario(formulario);\r\nconsole.log(formulario);\r\n\r\n// conexão com Banco de dados | PHP\r\nformulario.addEventListener('submit', (element) => {\r\n    element.preventDefault();\r\n\r\n    const formData = new FormData(this); // envia todos os parametros do formulario\r\n    const searchParams = new URLSearchParams();\r\n\r\n\r\n    \r\n    for (const param of searchParams) {\r\n        searchParams.append(param[0], param[1]);\r\n        console.log(param[0], param[1]);\r\n    }\r\n\r\n\r\n    // fetch('register.php', {\r\n    //     method: 'POST',\r\n    //     body: {data: object},\r\n    // })\r\n    \r\n    // fetch('../php/register.php', {\r\n    //     method: 'POST',\r\n    //     body: formData\r\n    // })\r\n    // .then(response => {\r\n    //     return console.log('dados gravados com sucesso');\r\n    //     // return window.location.href('../../public/html/index.html');\r\n    // })\r\n    // .catch(error => {\r\n    //     console.log(error);\r\n    // });\r\n});"],"names":["CPF","cpf","_classCallCheck","Object","defineProperty","enumerable","configurable","writable","value","replace","_createClass","key","validator","cpfOnly","length","isSequence","cfpParcial","slice","digit01","checkDigit","digit02","cpfInteiro","cpfParcial","cpfArray","Array","from","count","soma","reduce","acumulator","Number","primeiroDigito","String","charAt","repeat","ValidarFormulario","form","document","querySelector","events","_this","addEventListener","submitButton","handleSubmit","preventDefault","formValido","camposValidos","senhasValidas","valid","_iterator","_createForOfIteratorHelper","querySelectorAll","_step","s","n","done","errorText","remove","err","e","f","_iterator2","_step2","input","label","previousElementSibling","innerText","criaErro","concat","classList","contains","validaCPF","validaUsuario","senha","repetirSenha","inputCPF","inputUsuario","usuario","match","mensagem","div","createElement","add","insertAdjacentElement","formulario","important","object","nome","sobrenome","idade","formValidation","console","log","element","formData","FormData","searchParams","URLSearchParams","param","append"],"sourceRoot":""}